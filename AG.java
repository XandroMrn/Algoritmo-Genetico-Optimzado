package ag;
// Optimización del Algoritmo Génetico
public class AG {
    
    public static double porcentaje(Individuo ind) { // me lo paso el Samu para comparar xd
        int contador = 0;
        
        for (int i = 0; i < ind.secuencia[0].length(); i++) {
            if (ind.secuencia[0].charAt(i) == ind.secuencia[1].charAt(i)) {
                contador++;
            }
        }
        return ((double)(contador))/ ind.secuencia[0].length();
    }

    public static void main(String[] args) {
        String[] primero = new String[2];
        //alpha
        primero[0] = "MFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAISGTNGTKRFDNPVLPFNDGVYFASTEKSNIIRGWIFGTTLDSKTQSLLIVNNATNVVIKVCEFQFCNDPFLGVYHKNNKSWMESEFRVYSSANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPINLVRDLPQGFSALEPLVDLPIGINITRFQTLLALHRSYLTPGDSSSGWTAGAAAYYVGYLQPRTFLLKYNENGTITDAVDCALDPLSETKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCVADYSVLYNSASFSTFKCYGVSPTKLNDLCFTNVYADSFVIRGDEVRQIAPGQTGKIADYNYKLPDDFTGCVIAWNSNNLDSKVGGNYNYLYRLFRKSNLKPFERDISTEIYQAGSTPCNGVEGFNCYFPLQSYGFQPTYGVGYQPYRVVVLSFELLHAPATVCGPKKSTNLVKNKCVNFNFNGLTGTGVLTESNKKFLPFQQFGRDIDDTTDAVRDPQTLEILDITPCSFGGVSVITPGTNTSNQVAVLYQGVNCTEVPVAIHADQLTPTWRVYSTGSNVFQTRAGCLIGAEHVNNSYECDIPIGAGICASYQTQTNSHRRARSVASQSIIAYTMSLGAENSVAYSNNSIAIPINFTISVTTEILPVSMTKTSVDCTMYICGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKNTQEVFAQVKQIYKTPPIKDFGGFNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKQYGDCLGDIAARDLICAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYENQKLIANQFNSAIGKIQDSLSSTASALGKLQDVVNQNAQALNTLVKQLSSNFGAISSVLNDILARLDKVEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSKRVDFCGKGYHLMSFPQSAPHGVVFLHVTYVPAQEKNFTTAPAICHDGKAHFPREGVFVSNGTHWFVTQRNFYEPQIITTHNTFVSGNCDVVIGIVNNTVYDPLQPELDSFKEELDKYFKNHTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQYIKWPWYIWLGFIAGLIAIVMVTIMLCCMTSCCSCLKGCCSCGSCCKFDEDDSEPVLKGVKLHYT";
        //primero[0] = "MFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAISG";
        //bat
        primero[1] = "MFRTLLLAALFNACWCARPSCLKPTEYWGTHTFDGVEYVPHNTTYVSVLLNKLSCLLPDPYMAXSGQTVRQKLYMGNTSNTLVYPVTPPMFNLTYGNVTPGVYNTSFLPVFDGLLVHTYMNRFAHLDNPNRTCQEPFGVVFGTTFEQDRIAMVIIAPGEFGMWGQLTRPNTTYVHVVACSNATVCAYPMFNRWGPAGSIHADDAFVEHNSSCFLNDTFEIPMGTSRVNLAFRFQDGNLLLYHTAWLPTENYTLSGDYPLRYARSVGVGSNLPFAQFFQSVARARDSACAFLHNNLYIAPVRPKELLVKYNDQGMPVEIADCSADSTQELYCITGTFTPSVGVYQLSRYRAEAKTLVQVTQQEGSCAIPYTTILEPPSPAAWVRATISNCTFDFESLLRTLPTYNLKCYGISPARLSTMCYAGVTLDIFKLNTTHLSNMLGSVPDAVSIYNYALPSNFYGCVHAYHXNSTTPYAXAVPPGAYXIKPGGRQLFNSFVSXVLDSXSSQCTPANCMGVVVIGLTPASGSNLVCPKANDTQVIEGQCVKYNFYGYAGTGVINQSDLAIPNNKLFVTSKSGAVLAVRAGDKVYSITPCVSVPISVGYDPGHQRALVFNGLDCSARANAVSMPASEYWTAAASTTARGSEPVLDTPSGCVYNVNNCTTHTVSVCEMPIGNSLCLVSNFTCSDVATANLSPNLLSLVVYDPTDAGLKVLTPVYWVSIPTNFTLAATTEYIQTTAPKVNVDCVKYLCGDSERCIDVLSQYGAFCEDVNKALADVSAIIDSSMVTMVSELTAGVMWSETPQANVGSYNFSGLXXXLGSNCQERQYRSAISDLLYNKVKVADPGFMGAYQKCIDEQWGGSVRDLICTQTFNGISVLPPIVSPGMQALYTSLLVGAVASSGYTFGITSVGVIPFATQLQFRLNGLGVTTNVLMENQKLIANAFNNALTGIQKGFDATNTALAKMQSVINQHAQQLSTLVDQLGNSFGAISSSINEIFSRLDELEANAQVDRLINGRMVVLNTYVTQLLIRASEVKAQAALASQKISECVKAQSQRNDFCGNGTHVLSIPQMAPNGVLFLHYSYQPTAYNLVRTAAGLCFNDTGYAPLGGLFVLPNNTDRWLFTKMSFYDPVNISVSNTQVLAACGLNYSSVNYTVLEPAVDTSSFNFTEEFEKWYVNQSHIFNNTFNASAFNFSLVDVNEQLAILTDVVNQLNQSYIDLKQLGTYEYTVKWPWYVWLGMIAGLVGLVLAVVLLLCMTNCCSCARGVCSCKSCAYEEHEDVYPAVRVHGKRTA";
        //primero[1] = "NVBAKAIWINBABBOQBBMAJBHCUQNCKAJGJQISLJGJNBAHMJAHQUFIGNVBAUQGIKAJLHVBQB";
        //beta
        //primero[2] = "MFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAIHVSGTNGTKRFANPVLPFNDGVYFASTEKSNIIRGWIFGTTLDSKTQSLLIVNNATNVVIKVCEFQFCNDPFLGVYYHKNNKSWMESEFRVYSSANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPINLVRGLPQGFSALEPLVDLPIGINITRFQTLHRSYLTPGDSSSGWTAGAAAYYVGYLQPRTFLLKYNENGTITDAVDCALDPLSETKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFGEVFNATRFASVYAWNRKRISNCVADYSVLYNSASFSTFKCYGVSPTKLNDLCFTNVYADSFVIRGDEVRQIAPGQTGNIADYNYKLPDDFTGCVIAWNSNNLDSKVGGNYNYLYRLFRKSNLKPFERDISTEIYQAGSTPCNGVKGFNCYFPLQSYGFQPTYGVGYQPYRVVVLSFELLHAPATVCGPKKSTNLVKNKCVNFNFNGLTGTGVLTESNKKFLPFQQFGRDIADTTDAVRDPQTLEILDITPCSFGGVSVITPGTNTSNQVAVLYQGVNCTEVPVAIHADQLTPTWRVYSTGSNVFQTRAGCLIGAEHVNNSYECDIPIGAGICASYQTQTNSPRRARSVASQSIIAYTMSLGVENSVAYSNNSIAIPTNFTISVTTEILPVSMTKTSVDCTMYICGDSTECSNLLLQYGSFCTQLNRALTGIAVEQDKNTQEVFAQVKQIYKTPPIKDFGGFNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKQYGDCLGDIAARDLICAQKFNGLTVLPPLLTDEMIAQYTSALLAGTITSGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYENQKLIANQFNSAIGKIQDSLSSTASALGKLQDVVNQNAQALNTLVKQLSSNFGAISSVLNDILSRLDKVEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSKRVDFCGKGYHLMSFPQSAPHGVVFLHVTYVPAQEKNFTTAPAICHDGKAHFPREGVFVSNGTHWFVTQRNFYEPQIITTDNTFVSGNCDVVIGIVNNTVYDPLQPELDSFKEELDKYFKNHTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQYIKWPWYIWLGFIAGLIAIVMVTIMLCCMTSCCSCLKGCCSCGSCCKFDEDDSEPVLKGVKLHYT";
        //primero[2] = "MFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHAIHV";
        //omicron
        //primero[3] = "MFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHVISGTNGTKRFDNPVLPFNDGVYFASIEKSNIIRGWIFGTTLDSKTQSLLIVNNATNVVIKVCEFQFCNDPFLDHKNNKSWMESEFRVYSSANNCTFEYVSQPFLMDLEGKQGNFKNLREFVFKNIDGYFKIYSKHTPIIVREPEDLPQGFSALEPLVDLPIGINITRFQTLLALHRSYLTPGDSSSGWTAGAAAYYVGYLQPRTFLLKYNENGTITDAVDCALDPLSETKCTLKSFTVEKGIYQTSNFRVQPTESIVRFPNITNLCPFDEVFNATRFASVYAWNRKRISNCVADYSVLYNLAPFFTFKCYGVSPTKLNDLCFTNVYADSFVIRGDEVRQIAPGQTGNIADYNYKLPDDFTGCVIAWNSNKLDSKVSGNYNYLYRLFRKSNLKPFERDISTEIYQAGNKPCNGVAGFNCYFPLRSYSFRPTYGVGHQPYRVVVLSFELLHAPATVCGPKKSTNLVKNKCVNFNFNGLKGTGVLTESNKKFLPFQQFGRDIADTTDAVRDPQTLEILDITPCSFGGVSVITPGTNTSNQVAVLYQGVNCTEVPVAIHADQLTPTWRVYSTGSNVFQTRAGCLIGAEYVNNSYECDIPIGAGICASYQTQTKSHGSASSVASQSIIAYTMSLGAENSVAYSNNSIAIPTNFTISVTTEILPVSMTKTSVDCTMYICGDSTECSNLLLQYGSFCTQLKRALTGIAVEQDKNTQEVFAQVKQIYKTPPIKYFGGFNFSQILPDPSKPSKRSFIEDLLFNKVTLADAGFIKQYGDCLGDIAARDLICAQKFKGLTVLPPLLTDEMIAQYTSALLAGTITSGWTFGAGAALQIPFAMQMAYRFNGIGVTQNVLYENQKLIANQFNSAIGKIQDSLSSTASALGKLQDVVNHNAQALNTLVKQLSSKFGAISSVLNDIFSRLDPPEAEVQIDRLITGRLQSLQTYVTQQLIRAAEIRASANLAATKMSECVLGQSKRVDFCGKGYHLMSFPQSAPHGVVFLHVTYVPAQEKNFTTAPAICHDGKAHFPREGVFVSNGTHWFVTQRNFYEPQIITTDNTFVSGNCDVVIGIVNNTVYDPLQPELDSFKEELDKYFKNHTSPDVDLGDISGINASVVNIQKEIDRLNEVAKNLNESLIDLQELGKYEQGSGYIPEAPRDGQAYVRKDGEWVLLSTFLGRSLEVLFQGPGHHHHHHHHSAWSHPQFEKGGGSGGGGSGGSAWSHPQFEK";
        //primero[3] = "MFVFLVLLPLVSSQCVNLTTRTQLPPAYTNSFTRGVYYPDKVFRSSVLHSTQDLFLPFFSNVTWFHVISG";
        
        Individuo individuo1 = new Individuo(primero);
        Individuo mejor = individuo1.clonar();
        int mejorPuntuacion = mejor.calificarIndividuo();
        Poblacion poblacion = new Poblacion(individuo1);
        System.out.println(poblacion.mejorAdaptado());

        for (int i = 0; i < 200; i++) {
            poblacion.eliminarInadaptados();
            poblacion.Cruzamiento();
            System.out.println("Generacion: " + poblacion.generacion);
            //System.out.println(poblacion.mejorAdaptado());
            if (poblacion.mejorAdaptado().calificarIndividuo() > mejorPuntuacion) {
                mejorPuntuacion = poblacion.mejorAdaptado().calificarIndividuo();
                mejor = poblacion.mejorAdaptado();
            }
        }        
        System.out.println("\n---El mejor individuo es:--- \n" + mejor + "\nPorcentaje: " + porcentaje(mejor));
    }
}